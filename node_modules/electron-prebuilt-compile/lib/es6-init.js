'use strict';

var _fs = require('fs');

var _fs2 = _interopRequireDefault(_fs);

var _path = require('path');

var _path2 = _interopRequireDefault(_path);

var _electronCompile = require('electron-compile');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function findPackageJson(initScript) {
  if (initScript === '/' || initScript.match(/^[A-Za-z]:$/)) {
    throw new Error("Can't find package.json");
  }

  // Walk up the parent directories until we find package.json. Make sure that
  // we're not actually stumbling upon a parent npm package
  let ret = _path2.default.join(initScript, 'package.json');
  if (_fs2.default.statSyncNoException(ret) && !_path2.default.resolve(_path2.default.dirname(ret), '..').match(/[\\\/]node_modules$/i)) {
    return ret;
  }

  return findPackageJson(_path2.default.dirname(initScript));
}

function main() {
  let initScript = _path2.default.resolve(process.argv[2]);
  let packageJson = findPackageJson(initScript);

  // Reconstitute the original arguments
  let args = process.argv.slice(2);
  process.argv = [process.argv[0]].concat(args);

  (0, _electronCompile.init)(_path2.default.dirname(packageJson), initScript);
}

main();
//# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi4uL3NyYy9lczYtaW5pdC5qcyJdLCJuYW1lcyI6WyJmaW5kUGFja2FnZUpzb24iLCJpbml0U2NyaXB0IiwibWF0Y2giLCJFcnJvciIsInJldCIsImpvaW4iLCJzdGF0U3luY05vRXhjZXB0aW9uIiwicmVzb2x2ZSIsImRpcm5hbWUiLCJtYWluIiwicHJvY2VzcyIsImFyZ3YiLCJwYWNrYWdlSnNvbiIsImFyZ3MiLCJzbGljZSIsImNvbmNhdCIsImluaXQiXSwibWFwcGluZ3MiOiI7Ozs7Ozs7Ozs7Ozs7O0FBSUEsU0FBU0EsZUFBVCxDQUF5QkMsVUFBekIsRUFBcUM7QUFDbkMsTUFBSUEsZUFBZSxHQUFmLElBQXNCQSxXQUFXQyxLQUFYLENBQWlCLGFBQWpCLENBQTFCLEVBQTJEO0FBQ3pELFVBQU0sSUFBSUMsS0FBSixDQUFVLHlCQUFWLENBQU47QUFDRDs7QUFFRDtBQUNBO0FBQ0EsTUFBSUMsTUFBTSxlQUFLQyxJQUFMLENBQVVKLFVBQVYsRUFBc0IsY0FBdEIsQ0FBVjtBQUNBLE1BQUksYUFBR0ssbUJBQUgsQ0FBdUJGLEdBQXZCLEtBQStCLENBQUMsZUFBS0csT0FBTCxDQUFhLGVBQUtDLE9BQUwsQ0FBYUosR0FBYixDQUFiLEVBQWdDLElBQWhDLEVBQXNDRixLQUF0QyxDQUE0QyxzQkFBNUMsQ0FBcEMsRUFBeUc7QUFDdkcsV0FBT0UsR0FBUDtBQUNEOztBQUVELFNBQU9KLGdCQUFnQixlQUFLUSxPQUFMLENBQWFQLFVBQWIsQ0FBaEIsQ0FBUDtBQUNEOztBQUVELFNBQVNRLElBQVQsR0FBZ0I7QUFDZCxNQUFJUixhQUFhLGVBQUtNLE9BQUwsQ0FBYUcsUUFBUUMsSUFBUixDQUFhLENBQWIsQ0FBYixDQUFqQjtBQUNBLE1BQUlDLGNBQWNaLGdCQUFnQkMsVUFBaEIsQ0FBbEI7O0FBRUE7QUFDQSxNQUFJWSxPQUFPSCxRQUFRQyxJQUFSLENBQWFHLEtBQWIsQ0FBbUIsQ0FBbkIsQ0FBWDtBQUNBSixVQUFRQyxJQUFSLEdBQWUsQ0FBQ0QsUUFBUUMsSUFBUixDQUFhLENBQWIsQ0FBRCxFQUFrQkksTUFBbEIsQ0FBeUJGLElBQXpCLENBQWY7O0FBRUEsdUJBekJNRyxJQXlCTixFQUFLLGVBQUtSLE9BQUwsQ0FBYUksV0FBYixDQUFMLEVBQWdDWCxVQUFoQztBQUNEOztBQUVEUSIsImZpbGUiOiJlczYtaW5pdC5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBmcyBmcm9tICdmcyc7XHJcbmltcG9ydCBwYXRoIGZyb20gJ3BhdGgnO1xyXG5pbXBvcnQge2luaXR9IGZyb20gJ2VsZWN0cm9uLWNvbXBpbGUnO1xyXG5cclxuZnVuY3Rpb24gZmluZFBhY2thZ2VKc29uKGluaXRTY3JpcHQpIHtcclxuICBpZiAoaW5pdFNjcmlwdCA9PT0gJy8nIHx8IGluaXRTY3JpcHQubWF0Y2goL15bQS1aYS16XTokLykpIHtcclxuICAgIHRocm93IG5ldyBFcnJvcihcIkNhbid0IGZpbmQgcGFja2FnZS5qc29uXCIpO1xyXG4gIH1cclxuXHJcbiAgLy8gV2FsayB1cCB0aGUgcGFyZW50IGRpcmVjdG9yaWVzIHVudGlsIHdlIGZpbmQgcGFja2FnZS5qc29uLiBNYWtlIHN1cmUgdGhhdFxyXG4gIC8vIHdlJ3JlIG5vdCBhY3R1YWxseSBzdHVtYmxpbmcgdXBvbiBhIHBhcmVudCBucG0gcGFja2FnZVxyXG4gIGxldCByZXQgPSBwYXRoLmpvaW4oaW5pdFNjcmlwdCwgJ3BhY2thZ2UuanNvbicpXHJcbiAgaWYgKGZzLnN0YXRTeW5jTm9FeGNlcHRpb24ocmV0KSAmJiAhcGF0aC5yZXNvbHZlKHBhdGguZGlybmFtZShyZXQpLCAnLi4nKS5tYXRjaCgvW1xcXFxcXC9dbm9kZV9tb2R1bGVzJC9pKSkge1xyXG4gICAgcmV0dXJuIHJldDtcclxuICB9XHJcblxyXG4gIHJldHVybiBmaW5kUGFja2FnZUpzb24ocGF0aC5kaXJuYW1lKGluaXRTY3JpcHQpKTtcclxufVxyXG5cclxuZnVuY3Rpb24gbWFpbigpIHtcclxuICBsZXQgaW5pdFNjcmlwdCA9IHBhdGgucmVzb2x2ZShwcm9jZXNzLmFyZ3ZbMl0pO1xyXG4gIGxldCBwYWNrYWdlSnNvbiA9IGZpbmRQYWNrYWdlSnNvbihpbml0U2NyaXB0KTtcclxuXHJcbiAgLy8gUmVjb25zdGl0dXRlIHRoZSBvcmlnaW5hbCBhcmd1bWVudHNcclxuICBsZXQgYXJncyA9IHByb2Nlc3MuYXJndi5zbGljZSgyKTtcclxuICBwcm9jZXNzLmFyZ3YgPSBbcHJvY2Vzcy5hcmd2WzBdXS5jb25jYXQoYXJncyk7XHJcbiAgXHJcbiAgaW5pdChwYXRoLmRpcm5hbWUocGFja2FnZUpzb24pLCBpbml0U2NyaXB0KVxyXG59XHJcblxyXG5tYWluKClcclxuIl19